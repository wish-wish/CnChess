{"version":3,"sources":["file:///D:/Coding/Creator/CnChess2/assets/scripts/Slice.ts"],"names":["_decorator","Component","EditBox","Hrdaya","ccclass","property","Slice","start","eb","node","getComponentInChildren","hd","string","fansec","toString","update","deltaTime","onReturn","num","Number","parseInt","error","speed","interval","speeds","Draw","reCurve","reDraw","t","act"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,O,OAAAA,O;;AAC7BC,MAAAA,M,iBAAAA,M;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;uBAGjBM,K,WADZF,OAAO,CAAC,OAAD,C,gBAAR,MACaE,KADb,SAC2BL,SAD3B,CACqC;AACjCM,QAAAA,KAAK,GAAG;AACJ,cAAIC,EAAE,GAAC,KAAKC,IAAL,CAAUC,sBAAV,CAAiCR,OAAjC,CAAP;AACA,cAAIS,EAAE,GAAC,KAAKD,sBAAL;AAAA;AAAA,+BAAP;AACAF,UAAAA,EAAE,CAACI,MAAH,GAAUD,EAAE,CAACE,MAAH,CAAUC,QAAV,EAAV;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,QAAQ,GACR;AACI,cAAIT,EAAE,GAAC,KAAKC,IAAL,CAAUC,sBAAV,CAAiCR,OAAjC,CAAP;AACA,cAAIS,EAAE,GAAC,KAAKD,sBAAL;AAAA;AAAA,+BAAP;AACA,cAAIQ,GAAG,GAAC,EAAR;;AACA,cAAI;AACAA,YAAAA,GAAG,GAACC,MAAM,CAACC,QAAP,CAAgBZ,EAAE,CAACI,MAAnB,CAAJ;AACH,WAFD,CAEE,OAAOS,KAAP,EAAc,CACf;;AACDV,UAAAA,EAAE,CAACE,MAAH,GAAUK,GAAV;AACA,cAAII,KAAK,GAACX,EAAE,CAACY,QAAH,GAAYZ,EAAE,CAACE,MAAzB;;AACA,cAAIS,KAAK,GAAC,IAAP,GAAaX,EAAE,CAACa,MAAH,CAAU,CAAV,CAAhB,EACA;AACIb,YAAAA,EAAE,CAACY,QAAH,GAAYZ,EAAE,CAACa,MAAH,CAAU,CAAV,IAAa,IAAb,GAAkBb,EAAE,CAACE,MAAjC;AACH,WAHD,MAGM,IAAIS,KAAK,GAAC,IAAP,GAAaX,EAAE,CAACa,MAAH,CAAU,CAAV,CAAhB,EACN;AACIb,YAAAA,EAAE,CAACY,QAAH,GAAYZ,EAAE,CAACa,MAAH,CAAU,CAAV,IAAa,IAAb,GAAkBb,EAAE,CAACE,MAAjC;AACH;;AACDF,UAAAA,EAAE,CAACc,IAAH;AACAd,UAAAA,EAAE,CAACe,OAAH;AACAf,UAAAA,EAAE,CAACgB,MAAH,CAAU,CAACC,CAAD,EAAUC,GAAV,KAAuB,CAChC,CADD;AAEH;;AAjCgC,O","sourcesContent":["import { _decorator, Component, Node, EditBox } from 'cc';\nimport { Hrdaya } from './Hrdaya';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Slice')\nexport class Slice extends Component {\n    start() {\n        let eb=this.node.getComponentInChildren(EditBox);\n        let hd=this.getComponentInChildren(Hrdaya);\n        eb.string=hd.fansec.toString();\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    onReturn()\n    {\n        let eb=this.node.getComponentInChildren(EditBox);\n        let hd=this.getComponentInChildren(Hrdaya);\n        let num=20;\n        try {\n            num=Number.parseInt(eb.string);    \n        } catch (error) {            \n        }\n        hd.fansec=num;\n        let speed=hd.interval*hd.fansec;\n        if((speed/1000)>hd.speeds[1])\n        {\n            hd.interval=hd.speeds[1]*1000/hd.fansec;\n        }else if((speed/1000)<hd.speeds[0])\n        {\n            hd.interval=hd.speeds[0]*1000/hd.fansec;\n        }    \n        hd.Draw();    \n        hd.reCurve();\n        hd.reDraw((t:number,act:string)=>{            \n        });\n    }\n}\n\n"]}